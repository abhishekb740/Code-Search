{
    "title": "How do I break out of nested loops in Java?",
    "description": [
        "I've got a nested loop construct like this:",
        "for (Type type : types) {",
        "    for (Type t : types2) {",
        "         if (some condition) {",
        "             // Do something and break...",
        "             break; // Breaks out of the inner loop",
        "         }",
        "    }",
        "}",
        "Now how can I break out of both loops? I've looked at similar questions, but none concerns Java specifically. I couldn't apply these solutions because most used gotos.",
        "I don't want to put the inner loop in a different method.",
        "I don't want to return the loops. When breaking I'm finished with the execution of the loop block."
    ],
    "answer": [
        "Like other answerers, I'd definitely prefer to put the loops in a different method, at which point you can just return to stop iterating completely. This answer just shows how the requirements in the question can be met.",
        "You can use break with a label for the outer loop. For example:",
        "public class Test {",
        "    public static void main(String[] args) {",
        "        outerloop:",
        "        for (int i=0; i < 5; i++) {",
        "            for (int j=0; j < 5; j++) {",
        "                if (i * j > 6) {",
        "                    System.out.println(\"Breaking\");",
        "                    break outerloop;",
        "                }",
        "                System.out.println(i + \" \" + j);",
        "            }",
        "        }",
        "        System.out.println(\"Done\");",
        "    }",
        "}",
        "This prints:",
        "0 0",
        "0 1",
        "0 2",
        "0 3",
        "0 4",
        "1 0",
        "1 1",
        "1 2",
        "1 3",
        "1 4",
        "2 0",
        "2 1",
        "2 2",
        "2 3",
        "Breaking",
        "Done"
    ]
}