{
    "title": "Sort a Map<Key, Value> by values",
    "description": [
        "I need to sort a Map<Key, Value> on the values.",
        "Since the values are not unique, I find myself converting the keySet into an array, and sorting that array through array sort with a custom comparator that sorts on the value associated with the key.",
        "Is there an easier way?"
    ],
    "answer": [
        "Here's a generic-friendly version:",
        "public class MapUtil {",
        "    public static <K, V extends Comparable<? super V>> Map<K, V> sortByValue(Map<K, V> map) {",
        "        List<Entry<K, V>> list = new ArrayList<>(map.entrySet());",
        "        list.sort(Entry.comparingByValue());",
        "        Map<K, V> result = new LinkedHashMap<>();",
        "        for (Entry<K, V> entry : list) {",
        "            result.put(entry.getKey(), entry.getValue());",
        "        }",
        "        return result;",
        "    }",
        "}"
    ]
}